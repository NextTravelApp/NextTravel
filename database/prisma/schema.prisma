generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id   String @id @default(cuid())
  name String

  email     String  @unique
  password  String
  resetCode String? @unique

  language String          @default("en")
  plan     String?
  searches Int             @default(0)
  history  SearchRequest[]

  stripeId           String?       @unique
  notificationTokens String[]
  messages           ChatMessage[]
  pendingRequests    RequestJob[]
}

model RequestJob {
  id String @id @default(cuid())

  triggerId String   @unique
  request   Json
  date      DateTime @default(now())

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model SearchRequest {
  id String @id @default(cuid())

  title           String
  image           String?
  imageAttributes String?
  location        String
  request         Json
  response        Json
  accomodation    String?
  attractions     String[] @default([])
  bookmark        Boolean  @default(false)
  public          Boolean  @default(false)
  date            DateTime
  sharedWith      String[] @default([])

  tokens Int

  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
}

model PopularLocations {
  id              String  @id
  name            String
  image           String?
  imageAttributes String?
}

model ChatMessage {
  id String @id @default(cuid())

  user   User   @relation(fields: [userId], references: [id])
  userId String

  content String
  data    Json?
  tokens  Int?

  createdAt DateTime @default(now())
  bot       Boolean  @default(false)
}
